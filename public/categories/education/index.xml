<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>education | Arie Spirgel</title>
    <link>/categories/education/</link>
      <atom:link href="/categories/education/index.xml" rel="self" type="application/rss+xml" />
    <description>education</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Fri, 14 Feb 2020 00:00:00 +0000</lastBuildDate>
    <image>
      <url>/images/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_2.png</url>
      <title>education</title>
      <link>/categories/education/</link>
    </image>
    
    <item>
      <title>Fellow R Instructors: Beware of the Curse of Knowledge!</title>
      <link>/post/curse-of-knowledge/curse-of-knowledge/</link>
      <pubDate>Fri, 14 Feb 2020 00:00:00 +0000</pubDate>
      <guid>/post/curse-of-knowledge/curse-of-knowledge/</guid>
      <description>


&lt;div id=&#34;the-curse-of-knowledge-in-everyday-life&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;The Curse of Knowledge in Everyday Life&lt;/h2&gt;
&lt;p&gt;Several years ago my friend Lauren asked me for my recipe for BBQ seitan. I love food-related conversation, so I wasted no time. “Start by sauteing some chopped onion in oil…”, and as quickly as I began, she cut me off. “Hold on,” she interjected. “What kind of oil do you use? How much? How high do you turn the heat?”&lt;/p&gt;
&lt;p&gt;Dissecting the conversation, what happened was that I implicitly made the absurd assumption that knowledge that is in my head must be in hers (i.e., “Use however much of whatever oil you’d like to at whatever heat you normally saute”). In other words, I fell victim to the &lt;a href=&#34;https://en.wikipedia.org/wiki/Curse_of_knowledge&#34;&gt;curse of knowledge&lt;/a&gt;. I’m &lt;strong&gt;not&lt;/strong&gt; an expert cook - just ask my wife who always keeps the salt and pepper shaker within arm’s reach when I prepare a meal - but I did naively explain the recipe to Lauren as if she possessed my idiosyncratic definition of “saute”.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;the-curse-of-knowledge-when-teaching-r&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;The Curse of Knowledge When Teaching R&lt;/h2&gt;
&lt;p&gt;Scenarios like this are universal, and most of the time, they are harmless. However, they can be frustrating when people have invested time and money to learn R from you. Even if you yourself are relatively to new to R, it is easy to take for granted all that you know and what it’s like to be a true beginner. Consider the following questions and confusion that a new R user might have when you ask them to do something as seemingly innocuous as running a line of &lt;code&gt;read_csv()&lt;/code&gt; code you’ve provided:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;“I just bought a book that says to use &lt;code&gt;read.csv()&lt;/code&gt;, but you use &lt;code&gt;read_csv()&lt;/code&gt;. They are so similar they must do exactly the same thing, right?”&lt;/li&gt;
&lt;li&gt;“Excuse me, but are you saying &lt;em&gt;tibble&lt;/em&gt;? Do you mean &lt;em&gt;table&lt;/em&gt;?”&lt;/li&gt;
&lt;li&gt;“I tried running &lt;code&gt;read_csv()&lt;/code&gt; but I got an error saying the function couldn’t be found. How does &lt;em&gt;that&lt;/em&gt; make sense?”&lt;/li&gt;
&lt;li&gt;“I thought you said colons aren’t allowed in function names, so why did you write &lt;code&gt;readr::read_csv()&lt;/code&gt;?”&lt;/li&gt;
&lt;li&gt;“The code you shared says &lt;code&gt;read_csv(&amp;quot;raw-data/survey-results.csv&amp;quot;)&lt;/code&gt; but I changed the &lt;code&gt;/&lt;/code&gt; to &lt;code&gt;\&lt;/code&gt; because that’s what the folders look like on my computer and now it doesn’t work. WTF, right?!”&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Not all of your students will tell you when they’re stuck, and because you can’t read their minds, what are you to do? &lt;strong&gt;Ask them!&lt;/strong&gt; Whether it’s a one day workshop or a semester long course, giving frequent, brief, assessments will help you identify areas of confusion and guide your lessons.&lt;/p&gt;
&lt;p&gt;You might be thinking that when you have a large group of people, resolving every question that every student has is unrealistic. That may be true, but it is a shame when a student falls behind because an instructor misses an opportunity for a simple clarification. Consider the following (intentionally confusing) passage from Bransford and Johnson (1972):&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The procedure is actually quite simple. First you arrange things into different groups… Of course, one pile may be sufficient depending on how much there is to do. If you have to go somewhere else due to lack of facilities that is the next step, otherwise you are pretty well set. It is important not to overdo any particular endeavor. That is, it is better to do too few things at once than too many. In the short run this may not seem important, but complications from doing too many can easily arise. A mistake can be expensive as well… At first the whole procedure will seem complicated. Soon, however, it will become just another facet of life. It is difficult to foresee any end to the necessity for this task in the immediate future, but then one never can tell. After the procedure is completed one arranges the materials into different groups again. Then they can be put into their appropriate places. Eventually they will be used once more and the whole cycle will have to be repeated. However, that is part of life. (Bransford and Johnson 1972 p. 722)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;If you’ve never seen this passage before, it probably makes little sense to you and its details are unlikely to stick in your mind. But if before you read it I gave you the passage’s title - &lt;em&gt;Washing Clothes&lt;/em&gt; - it would suddenly become much clearer. There are plenty of “washing clothes” examples in R, and as the instructor, it’s your job to construct an environment that helps you identify them.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;conclusion&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Frequent assessments will alert you when you succumb to the curse of knowledge and help you to correct your biases. If you’re teaching R - or for that matter, anything - and you’re not regularly checking in on what your students know and what their misconceptions are, it’s worth asking yourself what your goals are, because maximizing student understanding may not be one of them.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>An Analysis of Gender Disparity Among Higher Education Chief Administrators</title>
      <link>/post/gender-college-presidents/gender-college-presidents/</link>
      <pubDate>Fri, 24 Aug 2018 00:00:00 +0000</pubDate>
      <guid>/post/gender-college-presidents/gender-college-presidents/</guid>
      <description>


&lt;p&gt;The chief administrator job of a higher education institution is, as the title implies, the pinnacle of careers in academic administration. The chief administrator is a school’s spokesperson and guides its vision, affecting the lives of the thousands of students who pass through those institutions. And for the chief administrators who don’t care about the idealism of educating future generations, I would imagine the &lt;a href=&#34;https://www.chronicle.com/interactives/executive-compensation#id=table_public_2017&#34;&gt;high-six/low-seven figure salaries&lt;/a&gt; that many earn is incentive enough. Despite the prominent roles that these administrators fill, there is a dearth of publicly available data on them.&lt;/p&gt;
&lt;p&gt;Every institution that participates in federal student financial aid is required to submit data to Integrated Postsecondary Education System, or IPEDS. Eventually, the submitted data is made publicly available in the &lt;a href=&#34;https://nces.ed.gov/ipeds/use-the-data&#34;&gt;IPEDS Data Center&lt;/a&gt;. This includes numbers on admissions, student enrollment, degree completions, graduation rates, financial aid, finances, human resources, and libraries. Much of this data has to be reported by gender and race/ethnicity. For example, how many Hispanic female undergraduates began at an institution last fall? What is the graduation rate of male American Indian Alaska Natives? What is the average salary of female instructional staff on a 9-month contract? But for one reason or another, as far as I can tell, the only things that must be reported about an institution’s chief administrator are her or his name and title.&lt;/p&gt;
&lt;p&gt;Names, though, are not completely devoid of meaningful information. If you live in the United States and hear the name Steven, you probably think of a male, and if you hear the name Mary, you probably think of a female. Yes, some names are more ambiguous than others (my own being a good example), and some people’s names might belie the gender they identify with, but there is a degree of reliability that a person’s name offers in determining whether they are female or male. Thus, using first names to make educated guesses about chief administrators’ gender, my goal here was to describe gender representation among this set of individuals.&lt;/p&gt;
&lt;p&gt;The first step was to download the names of the chief administrators for every institution in the IPEDS Data Center (n = 7108) and clean up the data. This required putting years in a consistent format; removing titles preceding first names (e.g., Dr., Ms., Mrs.); extracting first names into their own column; and adding variable labels for college sector.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)
library(babynames)
library(scales)

admin &amp;lt;- read_csv(&amp;quot;data/chief-admin-names.csv&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# tidy year 
admin &amp;lt;- admin %&amp;gt;% 
  gather(&amp;quot;year&amp;quot;, &amp;quot;name&amp;quot;, `Name of chief administrator (HD2016)`,
         `Name of chief administrator (HD2015)`:`Name of Chief Administrator (IC90HD)`) 

# extract year from names and put in consistent format
admin &amp;lt;- admin %&amp;gt;% 
  mutate(year =  parse_number(year),
         year = ifelse(year &amp;gt;= 9596 &amp;amp; year &amp;lt;= 9798,
                       str_sub(start = 1, end = 2, year), year),
         year = ifelse(nchar(year) == 2, 
                       paste0(&amp;quot;19&amp;quot;, year), 
                       year),
         year = as.integer(year))

# select and rename variables
admin &amp;lt;- admin %&amp;gt;% 
  select(unit_id = UnitID, 
         sector_code = `Sector of institution (HD2016)`,
         institution_name = `Institution Name`,
         year, name,
         undergrad_enroll_2016 = `Grand total (EF2016  All students  Undergraduate total)`,
         grad_enroll_2016 = `Grand total (EF2016  All students  Graduate and First professional)`)

# titles are in the first position for many names, so need to remove
# those so can extract first posistion from names and have it reflect
# first name
admin &amp;lt;- admin %&amp;gt;% 
  mutate(name = tolower(name),
         name = gsub(&amp;quot;\\.&amp;quot;, &amp;quot;&amp;quot;, name),
         name = gsub(&amp;quot;\\&amp;lt;dr\\&amp;gt;&amp;quot;, &amp;quot;&amp;quot;, name),
         name = gsub(&amp;quot;\\&amp;lt;mr\\&amp;gt;&amp;quot;, &amp;quot;&amp;quot;, name),
         name = gsub(&amp;quot;\\&amp;lt;ms\\&amp;gt;&amp;quot;, &amp;quot;&amp;quot;, name),
         name = gsub(&amp;quot;\\&amp;lt;mrs\\&amp;gt;&amp;quot;, &amp;quot;&amp;quot;, name),
         name = gsub(&amp;quot;\\&amp;lt;rev\\&amp;gt;&amp;quot;, &amp;quot;&amp;quot;, name),
         name = gsub(&amp;quot;\\&amp;lt;reverend\\&amp;gt;&amp;quot;, &amp;quot;&amp;quot;, name),
         name = gsub(&amp;quot;\\&amp;lt;very reverend\\&amp;gt;&amp;quot;, &amp;quot;&amp;quot;, name),
         name = gsub(&amp;quot;\\&amp;lt;very\\&amp;gt;&amp;quot;, &amp;quot;&amp;quot;, name),
         name = gsub(&amp;quot;\\&amp;lt;rabbi\\&amp;gt;&amp;quot;, &amp;quot;&amp;quot;, name),
         name = gsub(&amp;quot;\\&amp;lt;msgr\\&amp;gt;&amp;quot;, &amp;quot;&amp;quot;, name),
         name = gsub(&amp;quot;\\&amp;lt;dra\\&amp;gt;&amp;quot;, &amp;quot;&amp;quot;, name),
         name = gsub(&amp;quot;\\&amp;lt;sr\\&amp;gt;&amp;quot;, &amp;quot;&amp;quot;, name),
         name = str_trim(name, side = &amp;quot;both&amp;quot;),
         full_name = tolower(name)) %&amp;gt;% 
  separate(name, into = &amp;quot;first_name&amp;quot;, sep = &amp;quot; &amp;quot;)

# add sector label
labels &amp;lt;- read_csv(&amp;quot;data/sector-value-labels.csv&amp;quot;) %&amp;gt;% 
  select(sector_code = Value, 
         sector_label = ValueLabel)

admin &amp;lt;- left_join(admin, labels, by = &amp;quot;sector_code&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Next, I assigned a gender to each chief administrator based on her or his first name. To do this, I used R’s &lt;code&gt;babynames&lt;/code&gt; package, which contains the number of babies born every year from 1880 to 2015 for each combination of name and sex&lt;a href=&#34;#fn1&#34; class=&#34;footnoteRef&#34; id=&#34;fnref1&#34;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt;. I took the babynames data and calculated how often each name was given to females vs. males, and then assigned gender based on the higher proportion. For example, in the babynames data, about 72% of all newborns named Jaydin were male, so I assigned the name Jaydin to male. Names like Jaydin, however, were the exception: Most of the time, names went overwhelmingly to one sex or the other, with the vast majority of names in the babynames dataset being associated with only one sex.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# read in babynames data and assign a proportion to female and male for each name
baby_names &amp;lt;- babynames %&amp;gt;% 
  select(sex, name, n) %&amp;gt;% 
  mutate(name = tolower(name))

baby_names &amp;lt;- baby_names %&amp;gt;% 
  group_by(sex, name) %&amp;gt;% 
  summarise(total = sum(n)) %&amp;gt;% 
  ungroup() %&amp;gt;% 
  group_by(name) %&amp;gt;% 
  mutate(prop = total/sum(total)) %&amp;gt;%
  filter(prop == max(prop)) %&amp;gt;% 
  ungroup() %&amp;gt;% 
  select(sex, first_name = name, prop)

# one chief admin officer has name gold and it happens to be one that is .5 prop,
# so removed from dataset. (gold was given as full name, so i&amp;#39;m *guessing* this 
# is actually last name).
baby_names &amp;lt;- baby_names %&amp;gt;% 
  filter(first_name != &amp;quot;gold&amp;quot; | prop != .5)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;historical-trends&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Historical Trends&lt;/h1&gt;
&lt;p&gt;This gave me a “dictionary” containing the probabilistic sex of 97,430 first names, which I then linked to the chief administrator data&lt;a href=&#34;#fn2&#34; class=&#34;footnoteRef&#34; id=&#34;fnref2&#34;&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt;, making it possible to examine historical trends in gender differences among chief administrators. (The babynames data is based on sex, but once I link it to adults’ names (i.e., the administrators), I make the (often wrong) assumption that names reflect gender. Also, of course, with this data, it is not possible to account for gender non-binary administrators).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# join ipeds and babynames, removing rows where there were no matches
admin &amp;lt;- left_join(admin, baby_names, by = &amp;quot;first_name&amp;quot;) %&amp;gt;% 
  mutate(institution_name = gsub(&amp;quot;-&amp;quot;, &amp;quot; &amp;quot;, institution_name)) %&amp;gt;% 
  filter(!is.na(sex))

admin &amp;lt;- admin %&amp;gt;% 
  select(unit_id, institution_name, sector_label, year, undergrad_enroll_2016, 
         grad_enroll_2016, full_name, first_name, sex)

# several variables are for 2016 only, so put those in their own data frame
admin_2016 &amp;lt;- admin %&amp;gt;% 
  filter(year == 2016) %&amp;gt;% 
  select(-year)

admin &amp;lt;- admin %&amp;gt;% 
  select(-undergrad_enroll_2016, -grad_enroll_2016)

# proportion female by year
female_prop_sex &amp;lt;- admin %&amp;gt;% 
  count(year, sex) %&amp;gt;%
  group_by(year) %&amp;gt;% 
  mutate(year_total = sum(n)) %&amp;gt;% 
  ungroup() %&amp;gt;% 
  mutate(prop_sex = n/year_total) %&amp;gt;% 
  filter(sex == &amp;quot;F&amp;quot;)
  
female_prop_sex %&amp;gt;% 
  ggplot(aes(x = factor(year), y = prop_sex, group = 1)) +
  geom_line() +
  geom_point() +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
  scale_y_continuous(label = percent_format()) +
  labs(x = &amp;quot;Year&amp;quot;, y = &amp;quot;Percent Women&amp;quot;,
       title = &amp;quot;Percentage of Chief Administrators Who Are Women&amp;quot;,
       subtitle = &amp;quot;All IPEDS Institutions, Years 1990-2016&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/gender-college-presidents/gender-college-presidents_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;There are three things to notice about the chart:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;The increasing percentage of chief administrators who are women&lt;a href=&#34;#fn3&#34; class=&#34;footnoteRef&#34; id=&#34;fnref3&#34;&gt;&lt;sup&gt;3&lt;/sup&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;The still minority percentage of chief administrators who are women&lt;/li&gt;
&lt;li&gt;The 35% figure I came up with for 2016 is roughly consistent with a &lt;a href=&#34;http://www.acenet.edu/news-room/Documents/Leading-the-Way-to-Parity.pdf&#34;&gt;survey reporting that 30%&lt;/a&gt; of 2016 college presidents were women), and compatible with the trends reported &lt;a href=&#34;https://infogram.com/ready-to-lead-women-in-the-presidency-1h8n6me9o9392xo&#34;&gt;here&lt;/a&gt;, lending some support to the approach I selected.&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div id=&#34;institution-type&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Institution Type&lt;/h1&gt;
&lt;p&gt;&lt;em&gt;School&lt;/em&gt;, as it’s used in IPEDS, is a broad term that covers vastly different types of institutions. It includes everything from a cosmetology school that enrolls a handful of students each year to flagship schools with billion-plus endowments and tens of thousands of students. That is to say, chief administrator positions vary in prestige, responsibility, salary, and a host of other intangibles. With that in mind, I calculated the percentage of female chief administrators, by sector.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# proportion female by sector
female_by_sector &amp;lt;- admin_2016 %&amp;gt;% 
  count(sector_label, sex) %&amp;gt;% 
  group_by(sector_label) %&amp;gt;% 
  mutate(prop_sex = n/sum(n)) %&amp;gt;% 
  ungroup() %&amp;gt;% 
  filter(sex == &amp;quot;F&amp;quot;)

female_by_sector %&amp;gt;%
  ggplot(aes(x = reorder(sector_label, prop_sex), y = prop_sex)) +
  geom_col() +
  coord_flip() +
  scale_y_continuous(label = percent_format()) +
  theme_minimal() +
  labs(x = NULL, y = &amp;quot;Percent Women&amp;quot;,
       title = &amp;quot;Percentage of Chief Aministrators Who Are Women,\nby Sector&amp;quot;,
       subtitle = &amp;quot;All IPEDS Institutions, Year 2016&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/gender-college-presidents/gender-college-presidents_files/figure-html/unnamed-chunk-7-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Although they are a minority in every sector, women make up a higher percentage of chief administrators at 2-year schools than at 4-year schools. One institution type is not better than another, but they serve different functions (e.g., teaching vs. research), meaning the disparities by sector further exaggerate the existing imbalance. For example, in 2016, 35.0% of academic chief administrators were women, yet the institutions they led accounted for only 28.5% of all students enrolled at institutions of higher education.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;conclusion&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Conclusion&lt;/h1&gt;
&lt;p&gt;The overall trend is moving in the right direction, but change is slow: From 1990 to 2016, the average yearly increase in the percentage of women chief administrators was 0.653%. These are prestigious jobs that aren’t vacated haphazardly, so for the near-term, the disparity is here to stay: If the same rate of change observed from 1990 to 2016 continues, it will take 23 years until gender parity among chief administrators is achieved.&lt;/p&gt;
&lt;p&gt;This is of course not a problem unique to higher education, but a societal one that begins well before women submit job applications. We must be aware of our biases - stop always telling your niece that she is pretty and her brother that he is smart! - however subtle they are, and correct them. You don’t have to be a woman to care about this, after all, “&lt;a href=&#34;https://www.pbs.org/weta/washingtonweek/web-video/hillary-clinton-declares-womens-rights-are-human-rights&#34;&gt;human rights are women’s rights&lt;/a&gt;”.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id=&#34;fn1&#34;&gt;&lt;p&gt;The data is restricted to combinations of five for more.&lt;a href=&#34;#fnref1&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn2&#34;&gt;&lt;p&gt;I removed rows where there were no matches between first names in the IPEDS data and first names in the babynames data.&lt;a href=&#34;#fnref2&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn3&#34;&gt;&lt;p&gt;You may have noticed a slight dip from 2006 to 2009. Considering how abrupt it is, I’m skeptical it represents a real trend. My guess is that it is instead reflective of an unrelated change in the underlying data (e.g., different reporting requirements), but I’m not entirely sure.&lt;a href=&#34;#fnref3&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Popularity of Various Data Analytic Tools at AIR Forums</title>
      <link>/post/air-forum-text-software-frequency/air-forum-text-software-frequency/</link>
      <pubDate>Fri, 24 Aug 2018 00:00:00 +0000</pubDate>
      <guid>/post/air-forum-text-software-frequency/air-forum-text-software-frequency/</guid>
      <description>


&lt;p&gt;Data: It’s become a cliche to say that it’s everywhere and in quantities that are unimaginable. But data in its raw form, whether in a structured database or on the internet, is of limited use until a human does something to it: Gather it, clean it, visualize it, model it, write about it, and so-on.&lt;/p&gt;
&lt;p&gt;The amount of data that those in institutional research encounter requires powerful tools to work with. And those tools exist. Lots of them. Everything from free, open-source software, to software costing hundreds of thousands dollars offered by companies that won’t stop emailing you despite unsubscribing from their list on a weekly basis.&lt;/p&gt;
&lt;p&gt;On the rare occasion someone asks me which software I’d recommend, I always say R. In my experience, its ability to do everything you’d want and need to do as an institutional researcher is unmatched (cut to five minutes later when that someone regrets having asked me and is looking for ways to exit the conversation). But rather than use this space to drone on about why I think R is amazing, my goal here is to reveal the software preferences of others in the field. (And obviously, I used R to do this!)&lt;/p&gt;
&lt;p&gt;It’s not a perfect approach, but my thinking was I could see how often different tools were mentioned in AIR Forum program books and how that’s changed over time. My first step was to download the program books from the forum website going back six years. Next, I created a function to read each of the programs books into R and &lt;a href=&#34;https://www.tidyverse.org/&#34;&gt;tidy&lt;/a&gt; them so every individual word within each book is contained on its own line in a single data frame.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# load packages
library(pdftools)
library(tidyverse)
library(tidytext)
library(scales)

# function to read in PDFs and get one word per line.
text_prepr &amp;lt;- function(doc, forum_year){
  
  reg &amp;lt;- &amp;quot;([^A-Za-z\\d#@&amp;#39;]|&amp;#39;(?![A-Za-z\\d#@]))&amp;quot;
  
  df &amp;lt;- pdf_text(doc)
  
  df &amp;lt;- data.frame(df)

  df &amp;lt;- df %&amp;gt;%
    rename(text = df) %&amp;gt;%
    unnest_tokens(word, text,  token = &amp;quot;regex&amp;quot;, pattern = reg) %&amp;gt;%
    mutate(year = forum_year)
  
  return(df)
}

# apply function to programs books
all_years &amp;lt;- bind_rows(
  text_prepr(&amp;quot;data/AIR-2018-Forum-Program-Book.pdf&amp;quot;, 2018),
  text_prepr(&amp;quot;data/2017-AIR-Forum-Program-Book.pdf&amp;quot;, 2017),
  text_prepr(&amp;quot;data/2016_AIR-Forum_Program-Book.pdf&amp;quot;, 2016),
  text_prepr(&amp;quot;data/2015-Forum-Program-Book-Web.pdf&amp;quot;, 2015),
  text_prepr(&amp;quot;data/2014ForumProgramBookFinal.pdf&amp;quot;, 2014),
  text_prepr(&amp;quot;data/2013finalprogram.pdf&amp;quot;, 2013)
)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This resulted in a data frame with a total 447583 rows (one row for each word), a glimpse of which is printed below:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;head(all_years)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##            word year
## 1   association 2018
## 2           for 2018
## 3 institutional 2018
## 4      research 2018
## 5          2018 2018
## 6           may 2018&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Next, I decided on which words I would ask R to look for. Somewhat arbitrarily and somewhat based on my experience at AIR Forums, I chose the following: &lt;em&gt;Excel&lt;/em&gt;, &lt;em&gt;R&lt;/em&gt;, &lt;em&gt;SAS&lt;/em&gt;, &lt;em&gt;SPSS&lt;/em&gt;, and &lt;em&gt;Tableau&lt;/em&gt;. The code below (1) searches for mentions of those tools in the list of words created above (2) counts the results by year (3) builds a chart of the results. To clarify, the resulting chart displays the number of times each software is mentioned in each of the AIR Forum program books for each of the respective years.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# filter for keywords and count by word and year
software &amp;lt;- all_years %&amp;gt;% 
  mutate(word = tolower(word)) %&amp;gt;% 
  filter(word %in% c(&amp;quot;excel&amp;quot;, &amp;quot;r&amp;quot;, &amp;quot;sas&amp;quot;, &amp;quot;spss&amp;quot;, &amp;quot;tableau&amp;quot;)) %&amp;gt;% 
  count(word, year) %&amp;gt;% 
  complete(word, year, fill = list(n = 0))

# make data frame of only 2018, so can include as labels at end of lines
software_2018 &amp;lt;- software %&amp;gt;% 
  filter(year == 2018)

# create chart
ggplot() +
  geom_line(data = software, aes(x = year, y = n, color = word, group = word), size = 2) +
  geom_text(data = software_2018, aes(x = year, y = n, label = word), nudge_y = 2) +
  geom_point(data = software, aes(x = year, y = n, color = word), size = 3) +
  theme_minimal() +
  labs(x = &amp;quot;Forum Year&amp;quot;, y = &amp;quot;# of Mentions&amp;quot;,
       title = &amp;quot;Number of Times Software is Mentioned in AIR Forum Program Book&amp;quot;,
       subtitle = &amp;quot;2013 to 2018 Forums&amp;quot;) +
  guides(color = FALSE)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/air-forum-text-software-frequency/air-forum-text-software-frequency_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;What stands out - and confirms what I’ve noticed at AIR Forums - is the rapid rise of Tableau. In 2014 I had never heard of it. In 2018, not knowing at least something about it seems unavoidable. Tableau is known for visual analytics, so it’s not surprising that its rise in populairty has coincided with an increasing interest in data visualization at AIR Forums.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# filter for keyword and count by word and year
visualize &amp;lt;- all_years %&amp;gt;% 
  group_by(year) %&amp;gt;% 
  mutate(total = n()) %&amp;gt;% 
  ungroup() %&amp;gt;% 
  mutate(visualiz = str_detect(word, &amp;quot;visualiz&amp;quot;)) %&amp;gt;%
  group_by(year) %&amp;gt;% 
  summarise(prop = mean(visualiz)) %&amp;gt;% 
  ungroup()


# create chart
ggplot(visualize, aes(x = year, y = prop)) +
  geom_line(size = 2) +
  geom_point(size = 3) +
  theme_minimal() +
  labs(x = &amp;quot;Forum Year&amp;quot;, y = &amp;quot;% of Mentions&amp;quot;,
       title = &amp;#39;Percent of All Words That Were &amp;quot;Visualiz*&amp;quot; in AIR Forum Program Book&amp;#39;,
       subtitle = &amp;quot;2013 to 2018 Forums&amp;quot;) +
  guides(color = FALSE) +
  scale_y_continuous(label = percent_format())&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/air-forum-text-software-frequency/air-forum-text-software-frequency_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Returning to the first chart, perhaps it’s my background in psychology - a field which has historically been dominated by SPSS - but I was surprised how little SPSS is mentioned (although, I wouldn’t be surprised to see it decrease in the future). As for R, it seems to have a presence, but I’m curious to see what happens to its popularity in institutional research over the next few years. Judging by my experience at recent Forums and the development of R tools that decrease the barrier to entry, my prediction is that interest will only grow.&lt;/p&gt;
&lt;p&gt;I’m not sure if this need be said, but I will: This approach to evaluating software popularity is fraught with limitations. My goal, however, was not to get a precise estimate. Rather, I was interested in one, getting a general sense of broad trends, and two, sharing how just a little of bit R code can do so much!&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
