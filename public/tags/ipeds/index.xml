<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ipeds | Arie Spirgel</title>
    <link>https://arie.rbind.io/tags/ipeds/</link>
      <atom:link href="https://arie.rbind.io/tags/ipeds/index.xml" rel="self" type="application/rss+xml" />
    <description>ipeds</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Tue, 07 Apr 2020 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://arie.rbind.io/images/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_2.png</url>
      <title>ipeds</title>
      <link>https://arie.rbind.io/tags/ipeds/</link>
    </image>
    
    <item>
      <title>Tidying IPEDS Data in R</title>
      <link>https://arie.rbind.io/post/online-education/distance-education/</link>
      <pubDate>Tue, 07 Apr 2020 00:00:00 +0000</pubDate>
      <guid>https://arie.rbind.io/post/online-education/distance-education/</guid>
      <description>


&lt;p&gt;If you’ve downloaded enough data from the &lt;a href=&#34;https://nces.ed.gov/ipeds/use-the-data&#34;&gt;IPEDS Data Center&lt;/a&gt; using the “Compare Institutions” interface, you’ve probably realized that, depending on what you’re downloading, the data provided is rarely in a format ready for analysis. Here, via a specific example, I describe what makes the IPEDS data format impractical, and how to use R to resolve that.&lt;/p&gt;
&lt;div id=&#34;reading-in-the-data&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Reading in the Data&lt;/h2&gt;
&lt;p&gt;I first downloaded Fall 2012 to Fall 2018 distance education headcounts for every college and university in the IPEDS Data Center. In this first section, I read in the data, and display a subset of what the full data set looks like.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)
library(scales)

theme_set(theme_light())

distance &amp;lt;- read_csv(&amp;quot;raw-data/distance-fall-12-18.csv&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://arie.rbind.io/img/data-preview.png&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;
&lt;p&gt;The data set contains 6,800 rows and 43 columns, and ignoring the &lt;code&gt;Institution Name&lt;/code&gt; column, each of the remaining columns is some version of the following: &lt;code&gt;Students enrolled exclusively in distance education courses (EF2018A_DIST  Undergraduate total)&lt;/code&gt;. Under that specific column, for each of the 6,800 institutions that reported data, are headcounts for &lt;strong&gt;exclusively distance&lt;/strong&gt; &lt;strong&gt;undergraduate students&lt;/strong&gt; in the fall term of &lt;strong&gt;2018&lt;/strong&gt;. The problem, thus, is that this column (and all the other ones like it) actually contains three pieces of information:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;strong&gt;Level&lt;/strong&gt;, which can take on the values &lt;em&gt;undergraduate&lt;/em&gt; or &lt;em&gt;graduate&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Modality&lt;/strong&gt;, which can take on the values &lt;em&gt;exlusively distance&lt;/em&gt;, &lt;em&gt;some distance&lt;/em&gt;, or &lt;em&gt;no distance&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Year&lt;/strong&gt;, which can take on any integer value from &lt;em&gt;2012&lt;/em&gt; to &lt;em&gt;2018&lt;/em&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This untidy format is exactly what makes IPEDS data tricky to work with. In contrast, tidy data - which means each variable is in its own column, each observation is in its own row, and each value is in its own cell&lt;a href=&#34;#fn1&#34; class=&#34;footnoteRef&#34; id=&#34;fnref1&#34;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt; - is advantageous not just for working with data in R, but other software as well (e.g., pivot tables in Excel).&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;tidying-the-data&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Tidying the Data&lt;/h2&gt;
&lt;p&gt;The first step to tidying this data is to pivot it so that all of the column names that contain the type of headcount are in one column, and the actual headcounts are in a different column. To do that, I use the &lt;code&gt;gather()&lt;/code&gt;&lt;a href=&#34;#fn2&#34; class=&#34;footnoteRef&#34; id=&#34;fnref2&#34;&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt; function. I first provide &lt;code&gt;gather()&lt;/code&gt; with the names of the two new variables that are being created - I call them &lt;code&gt;variable&lt;/code&gt; and &lt;code&gt;headcount&lt;/code&gt;, but they can be called anything you want - and then which columns I want pivoted from wide to long; here, I pivot everything from the 2nd column to the last column of the data set.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;distance &amp;lt;- distance %&amp;gt;% 
  gather(variable, headcount, 2:ncol(.))

distance&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 285,600 x 3
##    `Institution Name`             variable                             headcount
##    &amp;lt;chr&amp;gt;                          &amp;lt;chr&amp;gt;                                    &amp;lt;dbl&amp;gt;
##  1 Educational Technical College… Students enrolled exclusively in di…        NA
##  2 A T Still University of Healt… Students enrolled exclusively in di…        NA
##  3 Aaniiih Nakoda College         Students enrolled exclusively in di…        NA
##  4 ABC Adult School               Students enrolled exclusively in di…        NA
##  5 ABC Beauty Academy             Students enrolled exclusively in di…        NA
##  6 ABCO Technology                Students enrolled exclusively in di…        NA
##  7 Abcott Institute               Students enrolled exclusively in di…        NA
##  8 Abdill Career College Inc      Students enrolled exclusively in di…        NA
##  9 Abilene Christian University   Students enrolled exclusively in di…        32
## 10 Abraham Baldwin Agricultural … Students enrolled exclusively in di…       377
## # … with 285,590 more rows&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As you can see above, the data set now only has three columns, not 43. Same data, different layout. Looks better already, right?!?&lt;/p&gt;
&lt;p&gt;We’re not done though. Remember, each row of the &lt;code&gt;variable&lt;/code&gt; column contains three pieces of information: level, modality, and year. So for the next three steps I split that column apart so each of these variables are in their own column. First, I’ll make a new column for level.&lt;/p&gt;
&lt;p&gt;There are countless ways of reaching the same endpoint in R, and in this instance, I use &lt;code&gt;str_detect()&lt;/code&gt; to tell R to put “Undergraduate” in the &lt;code&gt;level&lt;/code&gt; column if it detects the string “Undergraduate” in the &lt;code&gt;variable&lt;/code&gt; column, and then perform the analogous task for “Graduate”.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;distance &amp;lt;- distance %&amp;gt;% 
  mutate(level = case_when(
           str_detect(variable, &amp;quot;Undergraduate&amp;quot;) ~ &amp;quot;Undergraduate&amp;quot;,
           str_detect(variable, &amp;quot;Graduate&amp;quot;) ~ &amp;quot;Graduate&amp;quot;))

distance&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 285,600 x 4
##    `Institution Name`          variable                        headcount level  
##    &amp;lt;chr&amp;gt;                       &amp;lt;chr&amp;gt;                               &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;  
##  1 Educational Technical Coll… Students enrolled exclusively …        NA Underg…
##  2 A T Still University of He… Students enrolled exclusively …        NA Underg…
##  3 Aaniiih Nakoda College      Students enrolled exclusively …        NA Underg…
##  4 ABC Adult School            Students enrolled exclusively …        NA Underg…
##  5 ABC Beauty Academy          Students enrolled exclusively …        NA Underg…
##  6 ABCO Technology             Students enrolled exclusively …        NA Underg…
##  7 Abcott Institute            Students enrolled exclusively …        NA Underg…
##  8 Abdill Career College Inc   Students enrolled exclusively …        NA Underg…
##  9 Abilene Christian Universi… Students enrolled exclusively …        32 Underg…
## 10 Abraham Baldwin Agricultur… Students enrolled exclusively …       377 Underg…
## # … with 285,590 more rows&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;See the new column on the end with &lt;code&gt;level&lt;/code&gt;?&lt;/p&gt;
&lt;p&gt;Next I do the same thing for modality: I tell R to look for specific strings, and make a new column based on those strings.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;distance &amp;lt;- distance %&amp;gt;% 
         mutate(modality = case_when(
           str_detect(variable, &amp;quot;not enrolled in any&amp;quot;) ~ &amp;quot;No Distance&amp;quot;,
           str_detect(variable, &amp;quot;in some&amp;quot;) ~ &amp;quot;Some Distance&amp;quot;,
           str_detect(variable, &amp;quot;exclusively&amp;quot;) ~ &amp;quot;Exclusively Distance&amp;quot;))

distance&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 285,600 x 5
##    `Institution Name`       variable                 headcount level  modality  
##    &amp;lt;chr&amp;gt;                    &amp;lt;chr&amp;gt;                        &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;  &amp;lt;chr&amp;gt;     
##  1 Educational Technical C… Students enrolled exclu…        NA Under… Exclusive…
##  2 A T Still University of… Students enrolled exclu…        NA Under… Exclusive…
##  3 Aaniiih Nakoda College   Students enrolled exclu…        NA Under… Exclusive…
##  4 ABC Adult School         Students enrolled exclu…        NA Under… Exclusive…
##  5 ABC Beauty Academy       Students enrolled exclu…        NA Under… Exclusive…
##  6 ABCO Technology          Students enrolled exclu…        NA Under… Exclusive…
##  7 Abcott Institute         Students enrolled exclu…        NA Under… Exclusive…
##  8 Abdill Career College I… Students enrolled exclu…        NA Under… Exclusive…
##  9 Abilene Christian Unive… Students enrolled exclu…        32 Under… Exclusive…
## 10 Abraham Baldwin Agricul… Students enrolled exclu…       377 Under… Exclusive…
## # … with 285,590 more rows&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The last step of tidying is to get &lt;code&gt;year&lt;/code&gt; in its own column. I &lt;em&gt;could&lt;/em&gt; tell R to make a new variable and put “2012” if it detects “2012”, “2013” if it detects “2013”, and so-on, but there is a much simpler way: the &lt;code&gt;parse_number()&lt;/code&gt; function, which drops any non-numeric characters from a string.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;distance &amp;lt;- distance %&amp;gt;% 
  mutate(year = parse_number(variable))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The tidying is now done, and so although this next step isn’t necessary, renaming and reordering the variables and factor levels will make the data easier to work with.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# rename columns, reorder factor levels (e.g., Undergraduate before Graduate)
distance &amp;lt;- distance %&amp;gt;%
  select(institution_name = `Institution Name`, level,
         modality, year, headcount) %&amp;gt;% 
  mutate(level = fct_relevel(level, &amp;quot;Undergraduate&amp;quot;),
         modality = fct_relevel(modality, &amp;quot;Some Distance&amp;quot;)) 

distance&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 285,600 x 5
##    institution_name                    level      modality        year headcount
##    &amp;lt;chr&amp;gt;                               &amp;lt;fct&amp;gt;      &amp;lt;fct&amp;gt;          &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;
##  1 Educational Technical College-Reci… Undergrad… Exclusively D…  2018        NA
##  2 A T Still University of Health Sci… Undergrad… Exclusively D…  2018        NA
##  3 Aaniiih Nakoda College              Undergrad… Exclusively D…  2018        NA
##  4 ABC Adult School                    Undergrad… Exclusively D…  2018        NA
##  5 ABC Beauty Academy                  Undergrad… Exclusively D…  2018        NA
##  6 ABCO Technology                     Undergrad… Exclusively D…  2018        NA
##  7 Abcott Institute                    Undergrad… Exclusively D…  2018        NA
##  8 Abdill Career College Inc           Undergrad… Exclusively D…  2018        NA
##  9 Abilene Christian University        Undergrad… Exclusively D…  2018        32
## 10 Abraham Baldwin Agricultural Colle… Undergrad… Exclusively D…  2018       377
## # … with 285,590 more rows&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Behold, tidy data!&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;visualizing-the-data&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Visualizing the Data&lt;/h2&gt;
&lt;p&gt;With the data in a tidy format you can now do…pretty much whatever you want with it! In the examples below, I chose to visualize it, which demonstrates how - thanks to tidy data(!) - you can recycle the same code with slight alterations to make different plots. First, here are overall trends in distance education.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;distance %&amp;gt;% 
  mutate(headcount = replace_na(headcount, 0)) %&amp;gt;% 
  group_by(year, modality) %&amp;gt;% 
  summarise(total = sum(headcount)) %&amp;gt;% 
  group_by(year) %&amp;gt;% 
  mutate(prop = total / sum(total)) %&amp;gt;% 
  ungroup() %&amp;gt;% 
  filter(modality != &amp;quot;No Distance&amp;quot;) %&amp;gt;% 
  ggplot(aes(x = factor(year), y = prop, fill = modality)) +
  geom_col() +
  scale_y_continuous(label = percent_format()) +
  theme(legend.position = &amp;quot;top&amp;quot;) +
  labs(x = &amp;quot;Fall Term&amp;quot;, y = &amp;quot;% of Students&amp;quot;,
       title = &amp;quot;Percentage of Students Enrolled in Distance Education&amp;quot;,
       fill = NULL,
       subtitle = &amp;quot;Fall 2012 to Fall 2018&amp;quot;,
       caption = &amp;quot;Source: IPEDS Data Center&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://arie.rbind.io/post/online-education/Distance-Education_files/figure-html/unnamed-chunk-8-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Next, I change the grouping variables to repeat the same chart except here I partition the data by level.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;distance %&amp;gt;% 
  mutate(headcount = replace_na(headcount, 0)) %&amp;gt;% 
  group_by(year, modality, level) %&amp;gt;% 
  summarise(total = sum(headcount)) %&amp;gt;% 
  group_by(year, level) %&amp;gt;% 
  mutate(prop = total / sum(total)) %&amp;gt;% 
  ungroup() %&amp;gt;% 
  filter(modality != &amp;quot;No Distance&amp;quot;) %&amp;gt;% 
  ggplot(aes(x = factor(year), y = prop, fill = modality)) +
  geom_col() +
  facet_wrap(~level) +
  scale_y_continuous(label = percent_format()) +
  theme(legend.position = &amp;quot;top&amp;quot;) +
  labs(x = &amp;quot;Fall Term&amp;quot;, y = &amp;quot;% of Students&amp;quot;,
       title = &amp;quot;Percentage of Students Enrolled in Distance Education&amp;quot;,
       fill = NULL,
       subtitle = &amp;quot;Fall 2012 to Fall 2018&amp;quot;,
       caption = &amp;quot;Source: IPEDS Data Center&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://arie.rbind.io/post/online-education/Distance-Education_files/figure-html/unnamed-chunk-9-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;And once more, limiting the results to a single institution: Florida State University.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;distance %&amp;gt;% 
  filter(institution_name == &amp;quot;Florida State University&amp;quot;) %&amp;gt;% 
  mutate(headcount = replace_na(headcount, 0)) %&amp;gt;% 
  group_by(year, modality, level) %&amp;gt;% 
  summarise(total = sum(headcount)) %&amp;gt;% 
  group_by(year, level) %&amp;gt;% 
  mutate(prop = total / sum(total)) %&amp;gt;% 
  ungroup() %&amp;gt;% 
  filter(modality != &amp;quot;No Distance&amp;quot;) %&amp;gt;% 
  ggplot(aes(x = factor(year), y = prop, fill = modality)) +
  geom_col() +
  facet_wrap(~level) +
  scale_y_continuous(label = percent_format()) +
  theme(legend.position = &amp;quot;top&amp;quot;) +
  labs(x = &amp;quot;Fall Term&amp;quot;, y = &amp;quot;% of Students&amp;quot;,
       title = &amp;quot;Percentage of Florida State U. Students Enrolled in Distance Education&amp;quot;,
       fill = NULL,
       subtitle = &amp;quot;Fall 2012 to Fall 2018&amp;quot;,
       caption = &amp;quot;Source: IPEDS Data Center&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://arie.rbind.io/post/online-education/Distance-Education_files/figure-html/unnamed-chunk-10-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;conclusion&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Among its many benefits, tidy data lets you devote more attention to &lt;em&gt;what&lt;/em&gt; you want to do rather than &lt;em&gt;how&lt;/em&gt; you want to do it. Yes, tidying data takes longer at the start, but in the long-run, it will save you time. In that way, it’s just like learning R!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id=&#34;fn1&#34;&gt;&lt;p&gt;&lt;a href=&#34;https://r4ds.had.co.nz/tidy-data.html&#34; class=&#34;uri&#34;&gt;https://r4ds.had.co.nz/tidy-data.html&lt;/a&gt;&lt;a href=&#34;#fnref1&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn2&#34;&gt;&lt;p&gt;&lt;code&gt;pivot_longer()&lt;/code&gt; is an updated version of &lt;code&gt;gather()&lt;/code&gt;.&lt;a href=&#34;#fnref2&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Why Use R for Institutional Research? Part 1, Many Models</title>
      <link>https://arie.rbind.io/post/ipeds-many-models/01-r-for-institutional-research/</link>
      <pubDate>Tue, 10 Mar 2020 00:00:00 +0000</pubDate>
      <guid>https://arie.rbind.io/post/ipeds-many-models/01-r-for-institutional-research/</guid>
      <description>


&lt;div id=&#34;introduction&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Introduction&lt;/h2&gt;
&lt;p&gt;I first heard about R when I was in graduate school in 2008 and fellow students used it to analyze their data. I didn’t bother to learn it at the time because, one, I didn’t see the benefit of it, and two, I assumed that without any programming experience, it was too difficult. So I continued with my same workflow: Clean data and make charts in Excel, import data into SPSS to analyze it, and then paste my output into a Word document and write up the results.&lt;/p&gt;
&lt;p&gt;I started working in institutional research in 2013 and I still hadn’t made the switch to R, but was beginning to see the drawbacks of my workflow and the upside of coding. I often had to generate the same reports on a regular basis where the only thing that would change was the data. Or I’d have to generate the same charts or tables for each of the 15 colleges at the university, and on bad days, each of the 150-something majors. This quickly became unsustainable when I would, for example, get one of these requests late on a Friday afternoon and had to have it ready for a Board meeting on Monday. R increasingly seemed like a preferable alternative.&lt;/p&gt;
&lt;p&gt;Fast-forward 7 years and my SPSS license has long since expired, I don’t recall the last time I made a chart in Excel, and the only thing I use Word for is making grocery lists. Today, my entire workflow exists inside of R.&lt;/p&gt;
&lt;p&gt;In the intervening years, I have frequently met other institutional researchers who are stuck in the same mindset I was in 2008: For people who have never coded, R seems too overwhelming to learn, and even if they were to learn it, they do not see the benefits of doing so. In future posts I plan to address the former, but in this series of posts I want to address the latter: What’s the point of learning R for institutional research? Rather than list all of the reasons why R is an excellent choice for doing institutional research, I want to show examples of how I use it. In this post, I’ll demonstrate the scenario of using R to run many models.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;If you are not an R user, do not worry about the details of the code below, but instead, pay attention to what the code is capable of producing&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;running-one-model&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Running One Model&lt;/h2&gt;
&lt;p&gt;Whether you want to predict future enrollment or explain why some students do not graduate, modeling is an important skill in institutional research. To show how to run a linear model in R, for all colleges and universities in the &lt;a href=&#34;https://nces.ed.gov/ipeds/use-the-data&#34;&gt;IPEDS Data Center&lt;/a&gt;, I downloaded their state, one year retention rates (i.e., the percent of first-time in college students who re-enroll their second fall term), student-faculty ratios, and the number of undergraduate applications they received for a given year. Here is the code for reading in the data and what the first five rows of data look like:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)
library(broom)
library(drlib)

ipeds &amp;lt;- read_rds(&amp;quot;processed-data/ipeds-sfr.rds&amp;quot;)

head(ipeds, 5)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 5 x 5
##   name                state   undergrad_applic… retention_rate student_faculty_…
##   &amp;lt;chr&amp;gt;               &amp;lt;chr&amp;gt;               &amp;lt;dbl&amp;gt;          &amp;lt;dbl&amp;gt;             &amp;lt;dbl&amp;gt;
## 1 Educational Techni… Puerto…                NA             11                21
## 2 A T Still Universi… Missou…                NA             NA                NA
## 3 Aaniiih Nakoda Col… Montana                NA             34                10
## 4 ABC Adult School    Califo…                NA             NA                 4
## 5 ABC Beauty Academy  Texas                  NA             25                10&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In this contrived example, to build a linear model with retention rate as the outcome and student-faculty ratio and number of undergraduate applications as the predictors, I took the &lt;code&gt;ipeds&lt;/code&gt; data frame, piped it (&lt;code&gt;%&amp;gt;%&lt;/code&gt;) to the &lt;code&gt;lm&lt;/code&gt; function, and then cleaned up the results with the &lt;code&gt;tidy()&lt;/code&gt; function from the broom package. This gives us the model results:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ipeds %&amp;gt;% 
  lm(retention_rate ~ student_faculty_ratio + undergrad_applicants, data = .) %&amp;gt;% 
  tidy()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 3 x 5
##   term                   estimate std.error statistic  p.value
##   &amp;lt;chr&amp;gt;                     &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;
## 1 (Intercept)           76.2      0.868         87.8  0.      
## 2 student_faculty_ratio -0.326    0.0589        -5.54 3.45e- 8
## 3 undergrad_applicants   0.000504 0.0000315     16.0  3.03e-54&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;At this point you may be thinking, “So what? I can just easily do the same thing in SPSS, or even Excel”. That is true, but what if instead of running one model, you had to run 150?&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;running-many-models&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Running Many Models&lt;/h2&gt;
&lt;p&gt;As part of our university’s strategic business plan, I recently had to create separate models for each of the 150-something majors at the school. If I were still using SPSS, this would mean:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;days of pointing and clicking and copying and pasting.&lt;/li&gt;
&lt;li&gt;doing the same thing over and over again each time the project requirements changed, which is an inevitability.&lt;/li&gt;
&lt;li&gt;having no documentation about the decisions I made because everything was done by pointing and clicking.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Returning to the original data set, let’s say I wanted repeat the same model above, but separately for each state. Using R, I first filter the data to only include states with at least 50 schools (an arbitrarily chosen cutoff point):&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ipeds &amp;lt;- ipeds %&amp;gt;% 
  add_count(state) %&amp;gt;% 
  filter(n &amp;gt;= 50)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Next, I turn the model into a function:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;state_regression &amp;lt;- function(df) {
 df %&amp;gt;% 
  lm(retention_rate ~ student_faculty_ratio + undergrad_applicants, data = .) 
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;From there, I can apply the function to each state in the data set, which returns a data frame with the model results for each state:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ipeds_model &amp;lt;- ipeds %&amp;gt;% 
  group_by(state) %&amp;gt;% 
  nest() %&amp;gt;% 
  mutate(model = map(data, state_regression),
         tidy_model = map(model, tidy)) %&amp;gt;% 
  unnest(tidy_model) 

head(ipeds_model, 5)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 5 x 8
## # Groups:   state [2]
##   state            data model term         estimate std.error statistic  p.value
##   &amp;lt;chr&amp;gt;    &amp;lt;list&amp;lt;df[,5&amp;gt; &amp;lt;lis&amp;gt; &amp;lt;chr&amp;gt;           &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;
## 1 Puerto …    [146 × 5] &amp;lt;lm&amp;gt;  (Intercept)  87.5       5.80        15.1  2.48e-18
## 2 Puerto …    [146 × 5] &amp;lt;lm&amp;gt;  student_fac… -0.869     0.315       -2.76 8.68e- 3
## 3 Puerto …    [146 × 5] &amp;lt;lm&amp;gt;  undergrad_a…  0.00208   0.00140      1.49 1.45e- 1
## 4 Missouri    [171 × 5] &amp;lt;lm&amp;gt;  (Intercept)  84.5       5.46        15.5  1.91e-22
## 5 Missouri    [171 × 5] &amp;lt;lm&amp;gt;  student_fac… -1.07      0.458       -2.33 2.30e- 2&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, with a separate model for each state all in a data frame, I can treat the model output like I would any other data. For example, here, I visualize the model results for each state:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ipeds_model %&amp;gt;% 
  filter(term != &amp;quot;(Intercept)&amp;quot;) %&amp;gt;% 
  mutate(term = if_else(term == &amp;quot;student_faculty_ratio&amp;quot;,
                        &amp;quot;Student/Faculty Ratio&amp;quot;, &amp;quot;# of Undergraduate Applications&amp;quot;)) %&amp;gt;% 
  ggplot(aes(x = reorder_within(state, -estimate, term),
             y = estimate,
             ymin = estimate - (2 * std.error),
             ymax = estimate + (2 * std.error))) +
  geom_pointrange(color = &amp;quot;grey60&amp;quot;) +
  coord_flip() +
  guides(color = FALSE) +
  facet_wrap(~term, scales = &amp;quot;free&amp;quot;, ncol = 2) +
  theme_classic() +
  scale_x_reordered() +
  geom_hline(yintercept = 0, linetype = 2) +
  labs(
    title = str_wrap(&amp;quot;Is First-Year Retention Associated with Student-Faulty Ratio and/or Undergraduate Applications?&amp;quot;, 75),
       subtitle = &amp;quot;Limited to states with at least 50 schools&amp;quot;,
       caption = &amp;quot;Source: IPEDS Data Center&amp;quot;,
       x = NULL, y = &amp;quot;Estimate&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://arie.rbind.io/post/ipeds-many-models/01-r-for-institutional-research_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;conclusion&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Claiming that there is more friction to learning R than there is to learning menu-driven tools is like saying learning to microwave TV dinners is easier than learning to cook the same meal from scratch. Both points might be true, but they obscure the ultimate goals of each: R, like cooking, unconstrains you, giving you the freedom to create whatever fills your imagination. And whether it’s running models for 150 majors or making soup for a large dinner party, learning to code and learning to cook can make your work not only more tenable, but more enjoyable, and in the long-run, simpler.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>An Analysis of Gender Disparity Among Higher Education Chief Administrators</title>
      <link>https://arie.rbind.io/post/gender-college-presidents/gender-college-presidents/</link>
      <pubDate>Fri, 24 Aug 2018 00:00:00 +0000</pubDate>
      <guid>https://arie.rbind.io/post/gender-college-presidents/gender-college-presidents/</guid>
      <description>


&lt;p&gt;The chief administrator job of a higher education institution is, as the title implies, the pinnacle of careers in academic administration. The chief administrator is a school’s spokesperson and guides its vision, affecting the lives of the thousands of students who pass through those institutions. And for the chief administrators who don’t care about the idealism of educating future generations, I would imagine the &lt;a href=&#34;https://www.chronicle.com/interactives/executive-compensation#id=table_public_2017&#34;&gt;high-six/low-seven figure salaries&lt;/a&gt; that many earn is incentive enough. Despite the prominent roles that these administrators fill, there is a dearth of publicly available data on them.&lt;/p&gt;
&lt;p&gt;Every institution that participates in federal student financial aid is required to submit data to Integrated Postsecondary Education System, or IPEDS. Eventually, the submitted data is made publicly available in the &lt;a href=&#34;https://nces.ed.gov/ipeds/use-the-data&#34;&gt;IPEDS Data Center&lt;/a&gt;. This includes numbers on admissions, student enrollment, degree completions, graduation rates, financial aid, finances, human resources, and libraries. Much of this data has to be reported by gender and race/ethnicity. For example, how many Hispanic female undergraduates began at an institution last fall? What is the graduation rate of male American Indian Alaska Natives? What is the average salary of female instructional staff on a 9-month contract? But for one reason or another, as far as I can tell, the only things that must be reported about an institution’s chief administrator are her or his name and title.&lt;/p&gt;
&lt;p&gt;Names, though, are not completely devoid of meaningful information. If you live in the United States and hear the name Steven, you probably think of a male, and if you hear the name Mary, you probably think of a female. Yes, some names are more ambiguous than others (my own being a good example), and some people’s names might belie the gender they identify with, but there is a degree of reliability that a person’s name offers in determining whether they are female or male. Thus, using first names to make educated guesses about chief administrators’ gender, my goal here was to describe gender representation among this set of individuals.&lt;/p&gt;
&lt;p&gt;The first step was to download the names of the chief administrators for every institution in the IPEDS Data Center (n = 7108) and clean up the data. This required putting years in a consistent format; removing titles preceding first names (e.g., Dr., Ms., Mrs.); extracting first names into their own column; and adding variable labels for college sector.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)
library(babynames)
library(scales)

admin &amp;lt;- read_csv(&amp;quot;data/chief-admin-names.csv&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# tidy year 
admin &amp;lt;- admin %&amp;gt;% 
  gather(&amp;quot;year&amp;quot;, &amp;quot;name&amp;quot;, `Name of chief administrator (HD2016)`,
         `Name of chief administrator (HD2015)`:`Name of Chief Administrator (IC90HD)`) 

# extract year from names and put in consistent format
admin &amp;lt;- admin %&amp;gt;% 
  mutate(year =  parse_number(year),
         year = ifelse(year &amp;gt;= 9596 &amp;amp; year &amp;lt;= 9798,
                       str_sub(start = 1, end = 2, year), year),
         year = ifelse(nchar(year) == 2, 
                       paste0(&amp;quot;19&amp;quot;, year), 
                       year),
         year = as.integer(year))

# select and rename variables
admin &amp;lt;- admin %&amp;gt;% 
  select(unit_id = UnitID, 
         sector_code = `Sector of institution (HD2016)`,
         institution_name = `Institution Name`,
         year, name,
         undergrad_enroll_2016 = `Grand total (EF2016  All students  Undergraduate total)`,
         grad_enroll_2016 = `Grand total (EF2016  All students  Graduate and First professional)`)

# titles are in the first position for many names, so need to remove
# those so can extract first posistion from names and have it reflect
# first name
admin &amp;lt;- admin %&amp;gt;% 
  mutate(name = tolower(name),
         name = gsub(&amp;quot;\\.&amp;quot;, &amp;quot;&amp;quot;, name),
         name = gsub(&amp;quot;\\&amp;lt;dr\\&amp;gt;&amp;quot;, &amp;quot;&amp;quot;, name),
         name = gsub(&amp;quot;\\&amp;lt;mr\\&amp;gt;&amp;quot;, &amp;quot;&amp;quot;, name),
         name = gsub(&amp;quot;\\&amp;lt;ms\\&amp;gt;&amp;quot;, &amp;quot;&amp;quot;, name),
         name = gsub(&amp;quot;\\&amp;lt;mrs\\&amp;gt;&amp;quot;, &amp;quot;&amp;quot;, name),
         name = gsub(&amp;quot;\\&amp;lt;rev\\&amp;gt;&amp;quot;, &amp;quot;&amp;quot;, name),
         name = gsub(&amp;quot;\\&amp;lt;reverend\\&amp;gt;&amp;quot;, &amp;quot;&amp;quot;, name),
         name = gsub(&amp;quot;\\&amp;lt;very reverend\\&amp;gt;&amp;quot;, &amp;quot;&amp;quot;, name),
         name = gsub(&amp;quot;\\&amp;lt;very\\&amp;gt;&amp;quot;, &amp;quot;&amp;quot;, name),
         name = gsub(&amp;quot;\\&amp;lt;rabbi\\&amp;gt;&amp;quot;, &amp;quot;&amp;quot;, name),
         name = gsub(&amp;quot;\\&amp;lt;msgr\\&amp;gt;&amp;quot;, &amp;quot;&amp;quot;, name),
         name = gsub(&amp;quot;\\&amp;lt;dra\\&amp;gt;&amp;quot;, &amp;quot;&amp;quot;, name),
         name = gsub(&amp;quot;\\&amp;lt;sr\\&amp;gt;&amp;quot;, &amp;quot;&amp;quot;, name),
         name = str_trim(name, side = &amp;quot;both&amp;quot;),
         full_name = tolower(name)) %&amp;gt;% 
  separate(name, into = &amp;quot;first_name&amp;quot;, sep = &amp;quot; &amp;quot;)

# add sector label
labels &amp;lt;- read_csv(&amp;quot;data/sector-value-labels.csv&amp;quot;) %&amp;gt;% 
  select(sector_code = Value, 
         sector_label = ValueLabel)

admin &amp;lt;- left_join(admin, labels, by = &amp;quot;sector_code&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Next, I assigned a gender to each chief administrator based on her or his first name. To do this, I used R’s &lt;code&gt;babynames&lt;/code&gt; package, which contains the number of babies born every year from 1880 to 2015 for each combination of name and sex&lt;a href=&#34;#fn1&#34; class=&#34;footnoteRef&#34; id=&#34;fnref1&#34;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt;. I took the babynames data and calculated how often each name was given to females vs. males, and then assigned gender based on the higher proportion. For example, in the babynames data, about 72% of all newborns named Jaydin were male, so I assigned the name Jaydin to male. Names like Jaydin, however, were the exception: Most of the time, names went overwhelmingly to one sex or the other, with the vast majority of names in the babynames dataset being associated with only one sex.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# read in babynames data and assign a proportion to female and male for each name
baby_names &amp;lt;- babynames %&amp;gt;% 
  select(sex, name, n) %&amp;gt;% 
  mutate(name = tolower(name))

baby_names &amp;lt;- baby_names %&amp;gt;% 
  group_by(sex, name) %&amp;gt;% 
  summarise(total = sum(n)) %&amp;gt;% 
  ungroup() %&amp;gt;% 
  group_by(name) %&amp;gt;% 
  mutate(prop = total/sum(total)) %&amp;gt;%
  filter(prop == max(prop)) %&amp;gt;% 
  ungroup() %&amp;gt;% 
  select(sex, first_name = name, prop)

# one chief admin officer has name gold and it happens to be one that is .5 prop,
# so removed from dataset. (gold was given as full name, so i&amp;#39;m *guessing* this 
# is actually last name).
baby_names &amp;lt;- baby_names %&amp;gt;% 
  filter(first_name != &amp;quot;gold&amp;quot; | prop != .5)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;historical-trends&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Historical Trends&lt;/h1&gt;
&lt;p&gt;This gave me a “dictionary” containing the probabilistic sex of 97,430 first names, which I then linked to the chief administrator data&lt;a href=&#34;#fn2&#34; class=&#34;footnoteRef&#34; id=&#34;fnref2&#34;&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt;, making it possible to examine historical trends in gender differences among chief administrators. (The babynames data is based on sex, but once I link it to adults’ names (i.e., the administrators), I make the (often wrong) assumption that names reflect gender. Also, of course, with this data, it is not possible to account for gender non-binary administrators).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# join ipeds and babynames, removing rows where there were no matches
admin &amp;lt;- left_join(admin, baby_names, by = &amp;quot;first_name&amp;quot;) %&amp;gt;% 
  mutate(institution_name = gsub(&amp;quot;-&amp;quot;, &amp;quot; &amp;quot;, institution_name)) %&amp;gt;% 
  filter(!is.na(sex))

admin &amp;lt;- admin %&amp;gt;% 
  select(unit_id, institution_name, sector_label, year, undergrad_enroll_2016, 
         grad_enroll_2016, full_name, first_name, sex)

# several variables are for 2016 only, so put those in their own data frame
admin_2016 &amp;lt;- admin %&amp;gt;% 
  filter(year == 2016) %&amp;gt;% 
  select(-year)

admin &amp;lt;- admin %&amp;gt;% 
  select(-undergrad_enroll_2016, -grad_enroll_2016)

# proportion female by year
female_prop_sex &amp;lt;- admin %&amp;gt;% 
  count(year, sex) %&amp;gt;%
  group_by(year) %&amp;gt;% 
  mutate(year_total = sum(n)) %&amp;gt;% 
  ungroup() %&amp;gt;% 
  mutate(prop_sex = n/year_total) %&amp;gt;% 
  filter(sex == &amp;quot;F&amp;quot;)
  
female_prop_sex %&amp;gt;% 
  ggplot(aes(x = factor(year), y = prop_sex, group = 1)) +
  geom_line() +
  geom_point() +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
  scale_y_continuous(label = percent_format()) +
  labs(x = &amp;quot;Year&amp;quot;, y = &amp;quot;Percent Women&amp;quot;,
       title = &amp;quot;Percentage of Chief Administrators Who Are Women&amp;quot;,
       subtitle = &amp;quot;All IPEDS Institutions, Years 1990-2016&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://arie.rbind.io/post/gender-college-presidents/gender-college-presidents_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;There are three things to notice about the chart:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;The increasing percentage of chief administrators who are women&lt;a href=&#34;#fn3&#34; class=&#34;footnoteRef&#34; id=&#34;fnref3&#34;&gt;&lt;sup&gt;3&lt;/sup&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;The still minority percentage of chief administrators who are women&lt;/li&gt;
&lt;li&gt;The 35% figure I came up with for 2016 is roughly consistent with a &lt;a href=&#34;http://www.acenet.edu/news-room/Documents/Leading-the-Way-to-Parity.pdf&#34;&gt;survey reporting that 30%&lt;/a&gt; of 2016 college presidents were women), and compatible with the trends reported &lt;a href=&#34;https://infogram.com/ready-to-lead-women-in-the-presidency-1h8n6me9o9392xo&#34;&gt;here&lt;/a&gt;, lending some support to the approach I selected.&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div id=&#34;institution-type&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Institution Type&lt;/h1&gt;
&lt;p&gt;&lt;em&gt;School&lt;/em&gt;, as it’s used in IPEDS, is a broad term that covers vastly different types of institutions. It includes everything from a cosmetology school that enrolls a handful of students each year to flagship schools with billion-plus endowments and tens of thousands of students. That is to say, chief administrator positions vary in prestige, responsibility, salary, and a host of other intangibles. With that in mind, I calculated the percentage of female chief administrators, by sector.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# proportion female by sector
female_by_sector &amp;lt;- admin_2016 %&amp;gt;% 
  count(sector_label, sex) %&amp;gt;% 
  group_by(sector_label) %&amp;gt;% 
  mutate(prop_sex = n/sum(n)) %&amp;gt;% 
  ungroup() %&amp;gt;% 
  filter(sex == &amp;quot;F&amp;quot;)

female_by_sector %&amp;gt;%
  ggplot(aes(x = reorder(sector_label, prop_sex), y = prop_sex)) +
  geom_col() +
  coord_flip() +
  scale_y_continuous(label = percent_format()) +
  theme_minimal() +
  labs(x = NULL, y = &amp;quot;Percent Women&amp;quot;,
       title = &amp;quot;Percentage of Chief Aministrators Who Are Women,\nby Sector&amp;quot;,
       subtitle = &amp;quot;All IPEDS Institutions, Year 2016&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://arie.rbind.io/post/gender-college-presidents/gender-college-presidents_files/figure-html/unnamed-chunk-7-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Although they are a minority in every sector, women make up a higher percentage of chief administrators at 2-year schools than at 4-year schools. One institution type is not better than another, but they serve different functions (e.g., teaching vs. research), meaning the disparities by sector further exaggerate the existing imbalance. For example, in 2016, 35% of academic chief administrators were women, yet the institutions they led accounted for only 29% of all students enrolled at institutions of higher education.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;conclusion&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Conclusion&lt;/h1&gt;
&lt;p&gt;The overall trend is moving in the right direction, but change is slow: From 1990 to 2016, the average yearly increase in the percentage of women chief administrators was 1%. These are prestigious jobs that aren’t vacated haphazardly, so for the near-term, the disparity is here to stay: If the same rate of change observed from 1990 to 2016 continues, it will take 23 years until gender parity among chief administrators is achieved.&lt;/p&gt;
&lt;p&gt;This is of course not a problem unique to higher education, but a societal one that begins well before women submit job applications. We must be aware of our biases - stop always telling your niece that she is pretty and her brother that he is smart! - however subtle they are, and correct them. You don’t have to be a woman to care about this, after all, “&lt;a href=&#34;https://www.pbs.org/weta/washingtonweek/web-video/hillary-clinton-declares-womens-rights-are-human-rights&#34;&gt;human rights are women’s rights&lt;/a&gt;”.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id=&#34;fn1&#34;&gt;&lt;p&gt;The data is restricted to combinations of five for more.&lt;a href=&#34;#fnref1&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn2&#34;&gt;&lt;p&gt;I removed rows where there were no matches between first names in the IPEDS data and first names in the babynames data.&lt;a href=&#34;#fnref2&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn3&#34;&gt;&lt;p&gt;You may have noticed a slight dip from 2006 to 2009. Considering how abrupt it is, I’m skeptical it represents a real trend. My guess is that it is instead reflective of an unrelated change in the underlying data (e.g., different reporting requirements), but I’m not entirely sure.&lt;a href=&#34;#fnref3&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
